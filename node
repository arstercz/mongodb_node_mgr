#!/bin/bash

#  start   use mongod to start slave, wait 1min and report
#  use     login shell command format.
#  stop    use kill to stop node, wait until stopped
#  status  test pid file
#  cz 2014-06-13

set -e

MODE=$1
[ $# -ge 1 ] && shift

BASEDIR=
NODEDIR=`dirname $0`
echo "$NODEDIR" | grep -q '^/' || NODEDIR="`pwd`/$NODEDIR"
NODERC="$NODEDIR/noderc"
OPTION_FILE="$NODEDIR/my.node.conf"
PIDFILE="$NODEDIR/data/mongod.lock"

if [ -f "$NODERC" ]
then
    . "$NODERC"
fi

if [ "$BASEDIR"x = "x" ]
then
    echo "empty BASEDIR! exit.."
    exit 1
fi

MONGOD="$BASEDIR/bin/mongod"
if [ ! -x "$MONGOD" ]
then
    echo "mongod not found in $BASEDIR/bin/"
    exit 1
fi


PORT=`cat $OPTION_FILE | sed -n -e '/^port/s/^port = //p' | sed 's/#.*//g'`
# usage option
case $MODE in
 'start')
   N_PID=''
   if [ -f $PIDFILE ]
    then
        echo "$PIDFILE has exists."
        N_PID=`cat "$PIDFILE"`
    fi
    if [ ! "$N_PID"x = "x" ]
    then
        echo "node already started (found pid file $PIDFILE)"
    else
        CURDIR=`pwd`
        cd $BASEDIR
        if [ "$DEBUG_NODE"x = "x" ]
        then
            $MONGOD --config="$OPTION_FILE" $@ > /dev/null 2>&1 &
        else
            $MONGOD --config="$OPTION_FILE" $@ >> "$NODEDIR/start.log" 2>&1 &
            SAFE_PID=$!
        fi

        echo -n 'waiting node start '

        cd $CURDIR
        TIMEOUT=30
        ATTEMPTS=1
        while [ ! -f $PIDFILE ] 
        do
            ATTEMPTS=$(( $ATTEMPTS + 1 ))
            echo -n "."
            if [ $ATTEMPTS = $TIMEOUT ]
            then
                break
            fi
            sleep 1
        done
        
        sleep 2
        N_PID=`cat "$PIDFILE"`
        if [ ! "$N_PID"x = "x" ]
        then
            echo " mongodb node on pid=$N_PID port=$PORT "
        else
            echo " mongodb node not started yet"
            exit 1
        fi
    fi
 ;;

 'stop')
    if [ -s $PIDFILE ]
    then
        PID=`cat "$PIDFILE"`
        kill $PID &
        ADMIN_PID=$!
        echo -n 'waiting mongodb node shutdown '
        while pgrep -P $$ "$PID" > /dev/null
        do
            echo -n .
            sleep 1
        done
        echo "mongodb node off pid=$PID port=$PORT"
    else
        echo 'no pidfile.'
    fi
 ;;

 'status')
    if [ -f $PIDFILE ]
    then
        PID=`cat "$PIDFILE"`
        ON=
        if [ ! "$PID"x = "x" ]
        then
            if kill -0 $PID
            then
                echo "mongodb node on pid=$PID port=$PORT"
                ON="yes"
            fi
        fi

        if [ -z $ON ]
        then
            echo "mongodb node dead pidfile=$PIDFILE"
        fi
    else
        echo "mongodb node off port=$PORT"
    fi
  ;;

 *)
    echo "Usage: $0 {start|stop|status}"
    exit 1
 ;;

esac

